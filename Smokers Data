{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Dependencies\n",
    "import csv\n",
    "import sys\n",
    "import pandas as pd\n",
    "import os\n",
    "import matplotlib\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from scipy.stats import linregress \n",
    "import seaborn as sns \n",
    "from scipy import stats\n",
    "import matplotlib.dates as mdates\n",
    "import scipy.stats as st\n",
    "from pprint import pprint\n",
    "from datetime import datetime"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>iso_code</th>\n",
       "      <th>continent</th>\n",
       "      <th>location</th>\n",
       "      <th>date</th>\n",
       "      <th>total_cases</th>\n",
       "      <th>new_cases</th>\n",
       "      <th>new_cases_smoothed</th>\n",
       "      <th>total_deaths</th>\n",
       "      <th>new_deaths</th>\n",
       "      <th>new_deaths_smoothed</th>\n",
       "      <th>...</th>\n",
       "      <th>gdp_per_capita</th>\n",
       "      <th>extreme_poverty</th>\n",
       "      <th>cardiovasc_death_rate</th>\n",
       "      <th>diabetes_prevalence</th>\n",
       "      <th>female_smokers</th>\n",
       "      <th>male_smokers</th>\n",
       "      <th>handwashing_facilities</th>\n",
       "      <th>hospital_beds_per_thousand</th>\n",
       "      <th>life_expectancy</th>\n",
       "      <th>human_development_index</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>ABW</td>\n",
       "      <td>North America</td>\n",
       "      <td>Aruba</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>3844</td>\n",
       "      <td>12</td>\n",
       "      <td>41.857</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>0.286</td>\n",
       "      <td>...</td>\n",
       "      <td>35973.781</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>11.62</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>76.29</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>AFG</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Afghanistan</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>39227</td>\n",
       "      <td>0</td>\n",
       "      <td>26.143</td>\n",
       "      <td>1453</td>\n",
       "      <td>0</td>\n",
       "      <td>1.714</td>\n",
       "      <td>...</td>\n",
       "      <td>1803.987</td>\n",
       "      <td>0.0</td>\n",
       "      <td>597.029</td>\n",
       "      <td>9.59</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>37.746</td>\n",
       "      <td>0.50</td>\n",
       "      <td>64.83</td>\n",
       "      <td>0.498</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>AGO</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Angola</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>4672</td>\n",
       "      <td>82</td>\n",
       "      <td>97.286</td>\n",
       "      <td>171</td>\n",
       "      <td>4</td>\n",
       "      <td>2.714</td>\n",
       "      <td>...</td>\n",
       "      <td>5819.495</td>\n",
       "      <td>0.0</td>\n",
       "      <td>276.045</td>\n",
       "      <td>3.94</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>26.664</td>\n",
       "      <td>0.00</td>\n",
       "      <td>61.15</td>\n",
       "      <td>0.581</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>AIA</td>\n",
       "      <td>North America</td>\n",
       "      <td>Anguilla</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>...</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>81.88</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>ALB</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Albania</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>13259</td>\n",
       "      <td>106</td>\n",
       "      <td>124.857</td>\n",
       "      <td>377</td>\n",
       "      <td>2</td>\n",
       "      <td>2.143</td>\n",
       "      <td>...</td>\n",
       "      <td>11803.431</td>\n",
       "      <td>1.1</td>\n",
       "      <td>304.195</td>\n",
       "      <td>10.08</td>\n",
       "      <td>7.1</td>\n",
       "      <td>51.2</td>\n",
       "      <td>0.000</td>\n",
       "      <td>2.89</td>\n",
       "      <td>78.57</td>\n",
       "      <td>0.785</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>202</th>\n",
       "      <td>OWID_KOS</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Kosovo</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>15472</td>\n",
       "      <td>47</td>\n",
       "      <td>58.429</td>\n",
       "      <td>622</td>\n",
       "      <td>3</td>\n",
       "      <td>1.286</td>\n",
       "      <td>...</td>\n",
       "      <td>9795.834</td>\n",
       "      <td>0.6</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.000</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>203</th>\n",
       "      <td>YEM</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Yemen</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>2034</td>\n",
       "      <td>1</td>\n",
       "      <td>0.571</td>\n",
       "      <td>588</td>\n",
       "      <td>0</td>\n",
       "      <td>0.286</td>\n",
       "      <td>...</td>\n",
       "      <td>1479.147</td>\n",
       "      <td>18.8</td>\n",
       "      <td>495.003</td>\n",
       "      <td>5.35</td>\n",
       "      <td>7.6</td>\n",
       "      <td>29.2</td>\n",
       "      <td>49.542</td>\n",
       "      <td>0.70</td>\n",
       "      <td>66.12</td>\n",
       "      <td>0.452</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>204</th>\n",
       "      <td>ZAF</td>\n",
       "      <td>Africa</td>\n",
       "      <td>South Africa</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>670766</td>\n",
       "      <td>1268</td>\n",
       "      <td>1365.000</td>\n",
       "      <td>16398</td>\n",
       "      <td>22</td>\n",
       "      <td>63.571</td>\n",
       "      <td>...</td>\n",
       "      <td>12294.876</td>\n",
       "      <td>18.9</td>\n",
       "      <td>200.380</td>\n",
       "      <td>5.52</td>\n",
       "      <td>8.1</td>\n",
       "      <td>33.2</td>\n",
       "      <td>43.993</td>\n",
       "      <td>2.32</td>\n",
       "      <td>64.13</td>\n",
       "      <td>0.699</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>205</th>\n",
       "      <td>ZMB</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Zambia</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>14641</td>\n",
       "      <td>29</td>\n",
       "      <td>72.857</td>\n",
       "      <td>332</td>\n",
       "      <td>0</td>\n",
       "      <td>0.286</td>\n",
       "      <td>...</td>\n",
       "      <td>3689.251</td>\n",
       "      <td>57.5</td>\n",
       "      <td>234.499</td>\n",
       "      <td>3.94</td>\n",
       "      <td>3.1</td>\n",
       "      <td>24.7</td>\n",
       "      <td>13.938</td>\n",
       "      <td>2.00</td>\n",
       "      <td>63.89</td>\n",
       "      <td>0.588</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>206</th>\n",
       "      <td>ZWE</td>\n",
       "      <td>Africa</td>\n",
       "      <td>Zimbabwe</td>\n",
       "      <td>9/28/2020</td>\n",
       "      <td>7812</td>\n",
       "      <td>9</td>\n",
       "      <td>18.429</td>\n",
       "      <td>227</td>\n",
       "      <td>0</td>\n",
       "      <td>0.286</td>\n",
       "      <td>...</td>\n",
       "      <td>1899.775</td>\n",
       "      <td>21.4</td>\n",
       "      <td>307.846</td>\n",
       "      <td>1.82</td>\n",
       "      <td>1.6</td>\n",
       "      <td>30.7</td>\n",
       "      <td>36.791</td>\n",
       "      <td>1.70</td>\n",
       "      <td>61.49</td>\n",
       "      <td>0.535</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>207 rows × 41 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     iso_code      continent      location       date  total_cases  new_cases  \\\n",
       "0         ABW  North America         Aruba  9/28/2020         3844         12   \n",
       "1         AFG           Asia   Afghanistan  9/28/2020        39227          0   \n",
       "2         AGO         Africa        Angola  9/28/2020         4672         82   \n",
       "3         AIA  North America      Anguilla  9/28/2020            3          0   \n",
       "4         ALB         Europe       Albania  9/28/2020        13259        106   \n",
       "..        ...            ...           ...        ...          ...        ...   \n",
       "202  OWID_KOS         Europe        Kosovo  9/28/2020        15472         47   \n",
       "203       YEM           Asia         Yemen  9/28/2020         2034          1   \n",
       "204       ZAF         Africa  South Africa  9/28/2020       670766       1268   \n",
       "205       ZMB         Africa        Zambia  9/28/2020        14641         29   \n",
       "206       ZWE         Africa      Zimbabwe  9/28/2020         7812          9   \n",
       "\n",
       "     new_cases_smoothed  total_deaths  new_deaths  new_deaths_smoothed  ...  \\\n",
       "0                41.857            25           0                0.286  ...   \n",
       "1                26.143          1453           0                1.714  ...   \n",
       "2                97.286           171           4                2.714  ...   \n",
       "3                 0.000             0           0                0.000  ...   \n",
       "4               124.857           377           2                2.143  ...   \n",
       "..                  ...           ...         ...                  ...  ...   \n",
       "202              58.429           622           3                1.286  ...   \n",
       "203               0.571           588           0                0.286  ...   \n",
       "204            1365.000         16398          22               63.571  ...   \n",
       "205              72.857           332           0                0.286  ...   \n",
       "206              18.429           227           0                0.286  ...   \n",
       "\n",
       "     gdp_per_capita  extreme_poverty  cardiovasc_death_rate  \\\n",
       "0         35973.781              0.0                  0.000   \n",
       "1          1803.987              0.0                597.029   \n",
       "2          5819.495              0.0                276.045   \n",
       "3             0.000              0.0                  0.000   \n",
       "4         11803.431              1.1                304.195   \n",
       "..              ...              ...                    ...   \n",
       "202        9795.834              0.6                  0.000   \n",
       "203        1479.147             18.8                495.003   \n",
       "204       12294.876             18.9                200.380   \n",
       "205        3689.251             57.5                234.499   \n",
       "206        1899.775             21.4                307.846   \n",
       "\n",
       "     diabetes_prevalence  female_smokers  male_smokers  \\\n",
       "0                  11.62             0.0           0.0   \n",
       "1                   9.59             0.0           0.0   \n",
       "2                   3.94             0.0           0.0   \n",
       "3                   0.00             0.0           0.0   \n",
       "4                  10.08             7.1          51.2   \n",
       "..                   ...             ...           ...   \n",
       "202                 0.00             0.0           0.0   \n",
       "203                 5.35             7.6          29.2   \n",
       "204                 5.52             8.1          33.2   \n",
       "205                 3.94             3.1          24.7   \n",
       "206                 1.82             1.6          30.7   \n",
       "\n",
       "     handwashing_facilities  hospital_beds_per_thousand  life_expectancy  \\\n",
       "0                     0.000                        0.00            76.29   \n",
       "1                    37.746                        0.50            64.83   \n",
       "2                    26.664                        0.00            61.15   \n",
       "3                     0.000                        0.00            81.88   \n",
       "4                     0.000                        2.89            78.57   \n",
       "..                      ...                         ...              ...   \n",
       "202                   0.000                        0.00             0.00   \n",
       "203                  49.542                        0.70            66.12   \n",
       "204                  43.993                        2.32            64.13   \n",
       "205                  13.938                        2.00            63.89   \n",
       "206                  36.791                        1.70            61.49   \n",
       "\n",
       "     human_development_index  \n",
       "0                      0.000  \n",
       "1                      0.498  \n",
       "2                      0.581  \n",
       "3                      0.000  \n",
       "4                      0.785  \n",
       "..                       ...  \n",
       "202                    0.000  \n",
       "203                    0.452  \n",
       "204                    0.699  \n",
       "205                    0.588  \n",
       "206                    0.535  \n",
       "\n",
       "[207 rows x 41 columns]"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the covid-19 dataset \n",
    "csv_path = (r'C:\\Users\\Cody\\projectone\\ucb-data-visualization-msgrp-project1-covid-19\\Resources\\owid-covid-data_updated_main.csv')\n",
    "covid_data_df = pd.read_csv(csv_path)\n",
    "covid_data_df.head(1000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def linear_regress(x,y):\n",
    "    print(f\"The r-squared is : {round(st.pearsonr(x, y)[0],2)}\")\n",
    "    (slope, intercept, rvalue, pvalue, stderr) = linregress(x, y)\n",
    "    regress_values = x * slope + intercept\n",
    "    line_eq = \"y = \" + str(round(slope,2)) + \"x + \" + str(round(intercept,2))\n",
    "    plt.scatter(x, y)\n",
    "    plt.plot(x,regress_values,\"r-\")\n",
    "    \n",
    "    return line_eq\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The r-squared is : 0.13\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Correlation of # of covid-19 death with cardiovasc_death_rate\n",
    "\n",
    "\n",
    "#smokers = covid_data_df.groupby([\"location\"])[\"female_smokers\"].mean() + covid_data_df.groupby([\"location\"])[\"male_smokers\"].mean()\n",
    "\n",
    "def annotate_plt(line_eq, a, b):\n",
    "    plt.annotate(line_eq,(a,b),fontsize=15,color=\"blue\")\n",
    "\n",
    "\n",
    "    # Call function \n",
    "get_regress = linear_regress(covid_data_df['female_smokers'], \n",
    "                             covid_data_df[\"total_deaths\"]/1000)\n",
    "\n",
    "\n",
    "# Call annotate func\n",
    "annotate_plt(get_regress, 200, 20)\n",
    "\n",
    "# Set a title\n",
    "plt.title(\"Covid-19 Deaths: cardiovasc_death_rate vs.Total Deaths: Linear Regression\")\n",
    "\n",
    "# Set xlabel\n",
    "plt.xlabel(\"Cardiovasc Death Rate\")\n",
    "\n",
    "# Set ylabel\n",
    "plt.ylabel(\"Total # of Deaths x 1000\")\n",
    "\n",
    "# Set grid \n",
    "plt.grid(linestyle='-', linewidth=1.5, alpha = 0.5, color='r')\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"Covid-19-cardiovasc_death_rate-VS-COVID-total_deaths-LinearRegression.png\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "The r-squared is : 0.03\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#Correlation of # of covid-19 death with cardiovasc_death_rate\n",
    "\n",
    "\n",
    "#smokers = covid_data_df.groupby([\"location\"])[\"female_smokers\"].mean() + covid_data_df.groupby([\"location\"])[\"male_smokers\"].mean()\n",
    "\n",
    "def annotate_plt(line_eq, a, b):\n",
    "    plt.annotate(line_eq,(a,b),fontsize=15,color=\"blue\")\n",
    "\n",
    "\n",
    "    # Call function \n",
    "get_regress = linear_regress(covid_data_df['male_smokers'], \n",
    "                             covid_data_df[\"total_deaths\"]/1000)\n",
    "\n",
    "\n",
    "# Call annotate func\n",
    "annotate_plt(get_regress, 200, 20)\n",
    "\n",
    "# Set a title\n",
    "plt.title(\"Covid-19 Deaths: cardiovasc_death_rate vs.Total Deaths: Linear Regression\")\n",
    "\n",
    "# Set xlabel\n",
    "plt.xlabel(\"Cardiovasc Death Rate\")\n",
    "\n",
    "# Set ylabel\n",
    "plt.ylabel(\"Total # of Deaths x 1000\")\n",
    "\n",
    "# Set grid \n",
    "plt.grid(linestyle='-', linewidth=1.5, alpha = 0.5, color='r')\n",
    "\n",
    "# Save the figure\n",
    "plt.savefig(\"Covid-19-cardiovasc_death_rate-VS-COVID-total_deaths-LinearRegression.png\")\n",
    "\n"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
